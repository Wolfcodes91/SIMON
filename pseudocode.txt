1) Define required constants
    
    buttons: topLeft, topRight, bottomLeft, bottomRight, on/off, start 
    display: score
    define CSS rule for each button so that they may be easily accessed by DOM manipulation

2) Define required variables used to track the state of the game

    power: determines whether the game is on or off. 
    order: an array determining button flash order 
    player order: an array determining the players move order - to be judged by:
    correct: whether or not the players pattern was correct compared to computers 
    score: determines what round of play and index of the order array is being accesed 
    computer turn: computers turn. Player cannot click any buttons during this time.
    player turn: players turn. 
    light: determines whether the board shows lit colors or regular.
    intervalId: the amount of time after each button click that the light state is activated.

3) Store elements on the page that will be accessed in code more than once in variables to make code more concise, readable and performant.

    normalColors: when the board is in its normal state
    lightColors: when the board is lit up 

4) Upon loading the app should:
	Initialize: the state variables
    game begins off. players turns the game on and scoreboard lights up with empty or 0
    upon pressing start the computer patterns begins and then waits for the players move

    render:
    
    The order variable will be a random array up to idk, 30? that determines the game play. 
    Each round the array will have push of the next number from the randomized array series 
    corresponding with the index of the round we are on.
    During the computers turn the player should be unable to click anything.
    
5) Handle a player clicking a quadrant

    game determines correct for players move and either ends game or moves on to the next round.

    During the players turn, the player will click each button filling in the player order array. 
    If the player order array matches the computer order array, then the round will be deemed "correct" 
    and the game will move to the next round.

6) Handle game play 

    game continues/speeds up until player loses. 
    after each round the intervalId will shorten between each of the computers moves
    causing the sequence to be played faster and thus harder to remember. 
    Like life - there can be no winner in SIMON - the best you can hope for is survival. 

    when the player loses, the game will light all four quadrants. 